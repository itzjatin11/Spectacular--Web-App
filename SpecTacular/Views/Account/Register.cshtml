@model RegisterViewModel

@{
    Layout = null;
    ViewData["Title"] = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - SpecTacular</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        /* Custom styles for the page */
        html, body {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
        }

        body {
            background: linear-gradient(135deg, #28a745, #155724);
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }

        .register-container {
            background: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            width: 400px;
            text-align: center;
        }

            .register-container h2 {
                font-weight: bold;
                margin-bottom: 20px;
                color: #28a745;
            }

        .form-control {
            border-radius: 25px;
            padding: 12px;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: #28a745;
                box-shadow: 0 0 8px rgba(40, 167, 69, 0.5);
            }

        .btn-register {
            width: 100%;
            border-radius: 25px;
            padding: 12px;
            font-weight: bold;
            background-color: #28a745;
            border: none;
            color: white;
            transition: all 0.3s ease-in-out;
        }

            .btn-register:hover {
                background-color: #155724;
                transform: scale(1.05);
            }
    </style>
</head>
<body>

    <div class="register-container">
        <h2>Register</h2>

        <!-- Display error messages from ModelState -->
        @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"] as string) || ViewData.ModelState?.ErrorCount > 0)
        {
            <div class="alert alert-danger">
                @if (ViewData.ModelState != null)
                {
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                }
            </div>
        }

        <form asp-action="Register" asp-controller="Account" method="post">
            @Html.AntiForgeryToken()

            <div class="mb-3">
                <input asp-for="Username" class="form-control" placeholder="Username" required>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input asp-for="Email" class="form-control" placeholder="Email" required>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input asp-for="Password" type="password" class="form-control" placeholder="Password" required>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm Password" required>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-register">Register</button>
        </form>

        <div class="mt-3">
            <span>Already have an account? <a asp-action="Login" asp-controller="Account">Login here</a></span>
        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
